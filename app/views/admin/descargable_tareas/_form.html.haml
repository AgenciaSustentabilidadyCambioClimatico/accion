- archivo_fue_subido = @descargable.archivo?
:javascript
	$(document).ready(function() {
		if ($('[type="radio"]:checked').length > 0) {
			subeArchivo($('[type="radio"]:checked'),false);
		}
		$('[type="radio"]').click(function(){
			subeArchivo(this,true);
		});

		editor = new Quill(
	    '.quill-container', {
	      bounds: '.quill-container',
	      modules: {
	        'formula': true,
	        'syntax': true,
	        'toolbar': [
	          [{ 'font': [] }, { 'size': [] }],
	          [ 'bold', 'italic', 'underline', 'strike' ],
	          [{ 'color': [] }, { 'background': [] }],
	          [{ 'script': 'super' }, { 'script': 'sub' }],
	          [{ 'header': '1' }, { 'header': '2' }, 'blockquote', 'code-block' ],
	          [{ 'list': 'ordered' }, { 'list': 'bullet'}, { 'indent': '-1' }, { 'indent': '+1' }],
	          [ 'direction', { 'align': [] }],
	          [ 'link', 'image', 'video', 'formula' ],
	          [ 'clean' ]
	        ],
	      },
	      theme: 'snow'
	    }
	  );
		editor.setContents(#{raw json_escape @descargable.contenido.blank? ? [].to_json : @descargable.contenido.as_hash[:ops].to_json})
		editor.on('editor-change', function(eventName,args) {
			content=JSON.stringify(editor.getContents());
			if (eventName === 'text-change') {
				$('#descargable_tarea_contenido').val(content);
			} else if (eventName === 'selection-change') {
				$('#descargable_tarea_contenido').val(content);
			}
			checkEditorHashContent(eventName,true);
		});

		$('#descargar-archivo').click(function(){
			$('input#formato').val($('#descargable_tarea_formato').val());
			$('input#contenido').val(JSON.stringify(editor.getContents()));
			$('form#descargar-contenido').submit();
		});

		$('#previsualizar-archivo').click(function(){
			mostrarPrevisualizacion();
		});

		// editor.on('editor-change', function(){
		// 	mostrarPrevisualizacion();
		// });

		function checkEditorHashContent(eventName,checkValidity) {
			$('#descargar-archivo').hide();
			$('#previsualizar-archivo').hide();
			if ( linesIsInEditor() > 0 ) {
				$('#descargar-archivo').show();
				$('#previsualizar-archivo').show();
			} else {
				$("#descargable-previsualizacion").empty();
				$('#descargable_tarea_contenido').val("");
			}
			if ( checkValidity ) {
				checkFieldValidity($('#descargable_tarea_contenido'));
			}
		}

		function linesIsInEditor() {
			lines = 0
			if ( 'ops' in editor.getContents() ) {
				$.each(editor.getContents()["ops"],function(k,v){
					if (v["insert"] !== "\n") {
						lines++;
					}
				});
			}
			return lines;
		}

		function mostrarPrevisualizacion() {
			if ( linesIsInEditor() > 0 ) {
				data = JSON.stringify(editor.getContents());
				prev = $("#descargable-previsualizacion");
				$.post("#{previsualizacion_admin_tarea_descargable_tareas_path(format: :json)}",{data: data},function(data) {
					prev.empty();
					prev.append('#{image_tag('logo-ascc-nuevo.png', width:130, class: '')}');
					$.each(data,function(index,line) {
						pClass = 'm-0';
						pStyle = '';

						if ( 'attributes' in line ) {
							$.each(line.attributes,function(style,value){
								pStyle += getStyle(style,value);
							});
						}
						if ( ('image' in line) == false ) {
							if ( line.value == "<br />" ) {
								value = line.value
							} else {
								value = "<p class='"+pClass+"' style='"+pStyle+"'>"+line.value+"</p>"
							}
							prev.append(value);
						}
					});
				});
			}
		}

		function subeArchivo(checkbox,checkValidity)
		{
			id 	= $(checkbox).attr("id");

			if(~id.indexOf("true")) {
				$('label[for="descargable_tarea_archivo"] > abbr').show();
				$('label[for="descargable_tarea_contenido"] > abbr').hide();
				$('#descargable_tarea_contenido').removeClass('required-field');
				if (#{archivo_fue_subido ? 'false' : 'true'}) {
					$('#descargable_tarea_archivo').addClass('required-field');
				//} else {
				//	$('#descargable_tarea_archivo_cache').addClass('required-field');
				}
				$('.crear-archivo-descargable').hide();
				$('.upload-archivo-descargable').show();
			} else if (~id.indexOf("false")) {
				$('label[for="descargable_tarea_archivo"] > abbr').hide();
				$('label[for="descargable_tarea_contenido"] > abbr').show();
				$('#descargable_tarea_contenido').addClass('required-field');

				if (#{archivo_fue_subido ? 'false' : 'true'}) {
					$('#descargable_tarea_archivo').removeClass('required-field');
				//} else {
				//	$('#descargable_tarea_archivo_cache').removeClass('required-field');
				}

				$('.crear-archivo-descargable').show();
				$('.upload-archivo-descargable').hide();
			}
			if ( checkValidity ) {
				checkFieldValidity($(checkbox));
			}
		}

		function getStyle(style,value) {
			pStyle='';
			if (style=='style' && $.inArray('bold',value) >= 0 ) {
				pStyle='font-weight:bold;'
			} else if (style=='style' && $.inArray('italic',value) >= 0 ) {
				pStyle='font-style:italic;'
			} else if (style=='size') {
				pStyle="font-size:"+value+"px;"
			} else if (style=='color') {
				pStyle="color:#"+value+";"
			} else if (style=='align') {
				pStyle="text-align:"+value+";"
			}
			return pStyle;
		}
		checkEditorHashContent(false);
		mostrarPrevisualizacion();
	});
:css
	#descargar-archivo, #previsualizar-archivo { display: none }
	#descargable-previsualizacion p[style=''] { height: 15px; }
	#descargable-previsualizacion br { line-height: 31px; }

- titulo t(:descargable_,tarea: @tarea.nombre).html_safe
= simple_form_for :descargable_tarea, url: descargar_formato_admin_tarea_descargable_tareas_path(@tarea), method: :patch, html: { id: "descargar-contenido" } do |f|
	= f.input :formato, as: :hidden, wrapper: false, input_html: { id: 'formato' }
	= f.input :contenido, as: :hidden, wrapper: false, input_html: { id: 'contenido' }
	= f.submit "", class: 'd-none'


- url = (@descargable.nil? or @descargable.id.nil?) ? admin_tarea_descargable_tareas_path : admin_tarea_descargable_tarea_path
= simple_form_for [:admin, @tarea, @descargable], url: url, remote: true, html: { autocomplete: :off } do |f|
	= f.input :tarea_id, as: :hidden, wrapper: false
	.row
		.col-lg-6.pr-lg-0.col-12.col-12
			.row
				.col-12
					.card.mb-2
						.card-header
							%h5.no-margin
								= t(:lista_de_, items: t(:campos_disponibles).downcase)
						.card-body.p-2.pl-3.pr-3
							- @metodos.each do |k,tag|
								%span.float-left.mr-2{class: tag}
									=k
				.col-12
					.card.mb-2
						.card-header
							%h5.no-margin.float-left.btn.btn-sm
								= action_label_of_(@descargable, true)
							= link_to t(:descargar), "#",class: 'float-right btn-sm btn btn-secondary', id: "descargar-archivo"
							= link_to t(:previsualizar), "#",class: 'float-right btn-sm btn btn-secondary mr-2', id: "previsualizar-archivo"
						.card-body.pt-2
							.row
								.col-12
									= f.input :nombre, label: t(:nombre), input_html: { class: 'required-field' }
								.col-lg-5.pr-lg-0.col-12
									- tareas_con_codigo = @tarea.descargable_tareas.where('codigo IS NOT NULL').size
									- codigo = (f.object.codigo.blank? ? "#{@tarea.codigo}-DES-#{(tareas_con_codigo+1).to_s.rjust(3,"0")}" : f.object.codigo)
									= f.input :codigo, input_html: { class: 'required-field', value: codigo }, label: t(:código)
								.col-lg-4.pr-lg-0.col-12
									= f.input :formato, collection: [[:DOCX,:docx],[:PDF,:pdf]], label: t(:formato), input_html: { class: 'required-field'} , include_blank: false
								.col-lg-3.pr-lg-0.col-12
									.form-group.boolean.required.descargable_tarea_subido{class: ('has-error' if f.object.errors.messages.has_key?(:subido))}
										%label.control-label.boolean.required{:for => "descargable_tarea_subido"}
											%abbr{:title => "required"} *
											= t(:subir_archivo)
										.radio-buttons
											= f.collection_radio_buttons :subido, [[true, t(:yes)] ,[false, t(:no)]], :first, :last, input_html: { class: 'required required-field' }
								.col-12.upload-archivo-descargable
									.row
										.col-10.pr-lg-0
											= f.input :archivo, as: :file, label: t(:archivo), input_html: { class: "form-control#{((archivo_fue_subido) ? ' ' :  ' required-field')}" }, required: true
											= f.hidden_field :archivo_cache #, class: "form-control#{((archivo_fue_subido) ? ' required-field' :  ' ')}"
											- # Se comenta la clase dado que no permite actualizar cuando se edita un archivo subido.-
										.col-2
											-#
												= __descargar_archivo(f.object.archivo,:archivo)
											= __descargar_archivo(f.object.archivo,f.object, true, false)


								.col-12.crear-archivo-descargable
									.form-group.boolean.m-0.required.descargable_tarea_contenido{class: ('has-error' if f.object.errors.messages.has_key?(:contenido))}
										%label.boolean.required.m-0{:for => "descargable_tarea_contenido"}
											%abbr{:title => "required"} *
											= t(:contenido)
										= f.input :contenido, as: :hidden, input_html: { class: 'required-field'}, wrapper: false
									#descargable.quill-container
		.col-lg-6.col-12.col-12
			.row
				.col-12
					.card.mb-2
						.card-header
							%h5.no-margin.float-left
								= t(:previsualización)
						.card-body.pt-2
							#descargable-previsualizacion

	.float-right
		= link_to t(:back), admin_tarea_descargable_tareas_path(@tarea), class: 'btn btn-sm btn-warning'
		= button_tag t(:save), 'data-disable-with' => "<i class='fa fa-spinner fa-spin'></i> Guardando...".html_safe, id: 'consultar-button', class: "btn btn-sm btn-primary btn-disabled", disabled: :disabled
