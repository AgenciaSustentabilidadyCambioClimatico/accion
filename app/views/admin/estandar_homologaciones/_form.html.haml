:javascript
	$(document).on('ready', function(){
		var acciones_descritas = #{raw json_escape Accion.descritas.to_json}
		var materia_sustancia_descritas = #{raw json_escape MateriaSustancia.descritas.to_json}
		var metas_descritas = #{raw json_escape Clasificacion.descritas(true).to_json}
		var acciones_descritas_por_clasificacion = #{raw json_escape Clasificacion.acciones_descritas.to_json}
		var materia_sustancia_descritas_por_clasificacion = #{raw json_escape Clasificacion.materia_sustancia_descritas.to_json}
		var mtSelector;
		var msSelector;

		$('.accion_select').change(function(){
			var mtSelector = $(this).closest('tr').find('.meta select');
			var msSelector = $(this).closest('tr').find('.materia select');
			var descripcion = $(this).closest('tr').find('.descripcion input');
			var medio_verif = $(this).closest('tr').find('.medio_verif input');
			verificar_si_necesita_agregar_materia_sustancia($(this).val(), mtSelector, msSelector, descripcion, medio_verif);
		});
		
		$('.materia_select').change(function(){
			var acSelector = $(this).closest('tr').find('.accion select');
			var mtSelector = $(this).closest('tr').find('.meta select');
			actualizar_metas(acSelector.val(), mtSelector,$(this).val());
		});

		verificar_si_necesita_agregar_materia_sustancia = function(accion_id, mtSelector, msSelector, descripcion, medio_verif) {
			if (accion_id != "" && accion_id != undefined) {
				ac = acciones_descritas[accion_id];
				actualizar_metas(accion_id, mtSelector)
				descripcion.val(ac.descripcion);
				medio_verif.val(ac.medio_de_verificacion_generico);
				if(ac.debe_asociar_materia_sustancia == true){
					msSelector.removeAttr('disabled').addClass('required-field');
					$('label[for="set_metas_accion_materia_sustancia_ud"] > abbr').show();
					$('#set_metas_accion_clasificacion_para_filtro.cpf-materia-sustancia').removeAttr('disabled');
				} else {
					msSelector.attr('disabled','disabled').removeClass('required-field').val("");
					$('label[for="set_metas_accion_materia_sustancia_ud"] > abbr').hide();
					$('#set_metas_accion_clasificacion_para_filtro.cpf-materia-sustancia').attr('disabled','disabled');
				}
			} else {
				descripcion.val("");
				mtSelector.empty().attr('disabled','disabled');
				msSelector.val("").attr('disabled','disabled');
			}
		}
		
		actualizar_metas = function(accion_id, mtSelector,materia_sustancia_id) {
			accion = acciones_descritas[accion_id];
			materia_sustancia = materia_sustancia_descritas[materia_sustancia_id];
			metas = { }
			activarSelectorMetas = false
			if (accion != undefined && accion.meta_id != undefined && accion.meta_id != null){
				metas[accion.meta_id] = metas_descritas[accion.meta_id].nombre;
				activarSelectorMetas = true;
			}
			if (materia_sustancia !== undefined && accion.meta_id != materia_sustancia.meta_id) {
				metas[materia_sustancia.meta_id] = metas_descritas[materia_sustancia.meta_id].nombre;
				activarSelectorMetas = true;
			}
			mtSelector.empty();
			$.each(metas,function(meta_id,meta_nombre){
				mtSelector.append("<option value='"+meta_id+"'>"+meta_nombre+"</option>");
			});

			if ( activarSelectorMetas) {
				mtSelector.removeAttr('disabled');
			} else {
				mtSelector.attr('disabled','disabled');
			}
		}
	});
	$(document).on('nested:fieldAdded:estandar_set_metas_acciones', function(event){
	  checkFieldValidity($('#estandar_homologacion_nombre'));
	  $('.accion_select').change(function(){
			var mtSelector = $(this).closest('tr').find('.meta select');
			var msSelector = $(this).closest('tr').find('.materia select');
			var descripcion = $(this).closest('tr').find('.descripcion input');
			var medio_verif = $(this).closest('tr').find('.medio_verif input');
			verificar_si_necesita_agregar_materia_sustancia($(this).val(), mtSelector, msSelector, descripcion, medio_verif);
		});
		$('.materia_select').change(function(){
			var acSelector = $(this).closest('tr').find('.accion select');
			var mtSelector = $(this).closest('tr').find('.meta select');
			actualizar_metas(acSelector.val(), mtSelector,$(this).val());
		});
	})
- titulo t(:estándar_homologación)
= simple_nested_form_for [:admin,@estandar], remote: true, html: { autocomplete: :off, multipart: true  }  do |f|
	.row.justify-content-center
		.col-lg-12
			.row
				.col-12
					.card
						.card-header
							%h5.no-margin
							%b
								= action_label_of_(@estandar)
						.card-body
							.row
								.col-6
									= f.input :nombre, label: t(:nombre), placeholder: "Ingrese nombre del Estándar", input_html: { class: 'required-field' }, required: true
								.col-3.pr-0
									= f.input :referencias, as: :file, input_html: {class: "form-control form-control border-right-0 required-field", multiple: true}, label: t(:adjuntar_archivos), required: true
								.col-3.pl-0
									= __archivos_status(f.object,:referencias)
		.col-lg-12
			.row
				.col-12
					.card
						.card-header
							%h5.no-margin
								=t(:acciones)
								= f.link_to_add :estandar_set_metas_acciones, data: { target: "#estandares-metas" }, class: 'float-right add-data-target' do
									%i.fa.fa-plus-circle
									=t(:agregar)
						.card-body.table
							.row
								.col-12
									%table#estandares-metas.table.table-striped.mb-0
										%tbody
											= f.fields_for :estandar_set_metas_acciones, :wrapper => false  do |meta|
												%tr.fields
													%td.align-bottom.accion
														= meta.input :accion_id, label: t(:acción), collection: Accion.all.map{|m|[m.nombre,m.id]}, input_html: { class: 'required-field accion_select' }, required: true
													- if meta.object.persisted? && meta.object.materia_sustancia_id.present?
														%td.align-bottom.materia= meta.input :materia_sustancia_id, label: t(:materia_sustancia), collection: MateriaSustancia.all.map{|m|[m.nombre,m.id]}, input_html: { class: 'required-field' }, required: true
													-else
														%td.align-bottom.materia= meta.input :materia_sustancia_id, label: t(:materia_sustancia), collection: MateriaSustancia.all.map{|m|[m.nombre,m.id]}, input_html: { class: 'required-field materia_select', disabled: true }, required: true
													%td.align-bottom.meta= meta.input :meta_id, label: t(:meta), collection: Clasificacion.all.map{|m|[m.nombre,m.id]}, input_html: { class: 'required-field' }, required: true
													%td.align-bottom= meta.input :alcance_id, label: t(:alcance), collection: Alcance.all.map{|m|[m.nombre,m.id]}, input_html: { class: 'required-field' }, required: true
													%td.align-bottom= meta.input :criterio_inclusion_exclusion	, label: t(:criterio_inclusión_exclusión)
													%td.align-bottom.descripcion= meta.input :descripcion_accion	, label: t(:descripción_acción), input_html: { class: 'required-field' }, required: true
													%td.align-bottom.medio_verif= meta.input :detalle_medio_verificacion	, label: t(:detalle_medio_verificación), input_html: { class: 'required-field' }, required: true
													%td.align-middle.accion.no-padding.remove-row.p-0
														= meta.link_to_remove do
															%i.fa.fa-times-circle.left.link-to-remove-row
	.float-right
		= link_to t(:back), admin_estandar_homologaciones_path, class: 'btn btn-sm btn-warning'
		= button_tag t(:save), 'data-disable-with' => "<i class='fa fa-spinner fa-spin'></i> Guardando...".html_safe, id: 'consultar-button', class: "btn btn-sm btn-primary btn-disabled", disabled: :disabled