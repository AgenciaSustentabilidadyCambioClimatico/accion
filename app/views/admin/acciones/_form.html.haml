:javascript
	$(document).ready(function() {
		$('.chosen-control').chosen(chosenOptions);
		debe_asociar_materia_sustancia($('[type="radio"]:checked'),false);
		$('[type="radio"]').click(function(){
			debe_asociar_materia_sustancia(this,true);
		});
		function debe_asociar_materia_sustancia(checkbox,checkValidity)
		{
			am	= $('#accion_meta_id');
			amo	= $('#accion_meta_id option:not([value='*']');
			id 	= $(checkbox).attr("id");

			if(~id.indexOf("false")) {
				am.removeAttr('disabled').addClass('required-field chosen-control').chosen(chosenOptions);
				$('label[for="accion_meta_id"] > abbr').show();
			} else if (~id.indexOf("true")) {
				am.attr('disabled','disabled').removeClass('required-field chosen-control border-error').tooltip('dispose').chosen('destroy');
				amo.attr('selected', 'selected');
				$('label[for="accion_meta_id"] > abbr').hide();
			}
			if ( checkValidity ) {
				checkFieldValidity(am);
			}
		}
		htmlErrorToTooltip('top');
	});

	$(document).on('nested:fieldAdded:accion_clasificaciones', function(e){
		checkFieldValidity($('#accion_nombre'));
	});

	$(document).on('nested:fieldRemoved:accion_clasificaciones', function(e){
		submitBtn = $(e.target).parents('form').find('.btn-disabled');
		if ( $('select.a-clasificacion').parents('.fields:not([style="display: none;"])').length == 0 ) {
			submitBtn.attr('disabled','disabled');
		} else {
			submitBtn.removeAttr('disabled');
		}
	});

	$(document).on('nested:fieldAdded:accion_clasificaciones nested:fieldAdded:accion_relacionadas', function(e) {
		$(e.target).find('select').chosen(chosenOptions);
	});

:css
	label[for="accion_meta_id"] abbr { display: none; }
- titulo t(:accion)
= simple_nested_form_for [:admin,@accion], remote: true, html: { autocomplete: :off } do |f|
	.row
		.col-12
			.card
				.card-header
					%h5.no-margin
						= action_label_of_(@accion)
				.card-body
					.row
						.col-lg-7.pr-lg-0.col-12
							.row
								.col-12
									= f.input :nombre, label: t(:nombre), input_html: { class: 'required-field' }, placeholder: "Indique un nombre", required: true
								.col-12
									= f.input :descripcion, label: t(:descripción), input_html: { class: 'required-field', rows: 4 }, placeholder: "Indique una descripción", required: true
								.col-lg-5.pr-lg-0.col-12
									.form-group.boolean.required.accion_debe_asociar_materia_sustancia{class: ('has-error' if f.object.errors.messages.has_key?(:debe_asociar_materia_sustancia))}
										%label.boolean.required{for: :accion_debe_asociar_materia_sustancia}
											%abbr{title: :required} *
											= t(:se_debe_asociar_materia_sustancia)
										.radio-buttons
											= f.collection_radio_buttons :debe_asociar_materia_sustancia, [[true, t(:yes)] ,[false, t(:no)]], :first, :last, input_html: { class: 'required' }
								.col-lg-7.col-12
									= f.input :meta_id, label: t(:meta_acción_sólo_si_no_debe_tener_materia_asociada), collection: Clasificacion.where(es_meta: true).all.map{|c|[c.nombre,c.id]}, input_html: { class: 'a-clasificacion', 'data-placeholder': 'Seleccione una meta' }, required: true
								.col-12
									= f.input :medio_de_verificacion_generico, label: t(:medio_de_verificación_genérico), input_html: { class: 'required-field', rows: 4 }, placeholder: "Describa el medio de verificación genérico", required: true
						.col-lg-5.col-12
							.row
								.col-12
									.form-group
										.card.mb-0
											.card-header.p-1.pr-3
												%label.integer.float-left.m-0
													%abbr{:title => "required"} *
													= t(:clasificaciones)
												= f.link_to_add :accion_clasificaciones, data: { target: "#accion-clasificaciones" }, class: 'float-right' do
													%i.fa.fa-plus-circle
											.card-body.p-0
												%table#accion-clasificaciones.table.table-striped.mb-0
													%tbody
														= f.fields_for :accion_clasificaciones, :wrapper => false  do |ac|
															%tr.fields
																%td.p-0
																	= ac.input :clasificacion_id, label: false, collection: Clasificacion.where(es_meta: false).all.map{|c|[c.nombre,c.id]}, input_html: { class: 'a-clasificacion chosen-control required-field', type: :string, 'data-placeholder': 'Seleccione una clasificación' }, required: true, wrapper_class: 'm-0'
																%td.accion.no-padding.remove-row
																	= ac.link_to_remove do
																		%i.fa.fa-times-circle.left.link-to-remove-row
		.col-12
			.card
				.card-header
					%h5.no-margin
						= t(:acciones_relacionadas)
						= f.link_to_add :accion_relacionadas, data: { target: "#accion-relacionadas" }, class: 'float-right' do
							%i.fa.fa-plus-circle
							= t(:agregar)
				.card-body.p-0
					%table#accion-relacionadas.table.table-striped.mb-0
						%tbody
							- accion_condition = @accion.new_record? ? [] : ["id != (?)", @accion.id]
							= f.fields_for :accion_relacionadas, :wrapper => false  do |ar|
								%tr.fields
									%td.p-0.accion-relacionada
										= ar.input :accion_relacionada_id, label: false, collection: Accion.where(accion_condition).all.map{|c|[c.nombre,c.id]}, input_html: { class: 'a-relacionada chosen-control required-field', type: :string, 'data-placeholder': 'Seleccione una acción' }, required: true, wrapper_class: 'm-0'
									%td.p-0
										= ar.input :descripcion, label: false, input_html: { class: 'descripcion-accion-relacion required-field' }, placeholder: "Describa la relación", required: true
									%td.accion.no-padding.remove-row
										= ar.link_to_remove do
											%i.fa.fa-times-circle.left.link-to-remove-row

	.float-right
		= link_to t(:back), admin_acciones_path, class: 'btn btn-sm btn-warning'
		= button_tag t(:save), 'data-disable-with' => "<i class='fa fa-spinner fa-spin'></i> Guardando...".html_safe, id: 'consultar-button', class: "btn btn-sm btn-primary btn-disabled", disabled: :disabled