- if @establecimiento.contribuyente_id.blank?
	- sin_contribuyente = true
- else
	- contribuyente = @establecimiento.contribuyente
- i_collection=contribuyente ? [[contribuyente.razon_social,contribuyente.id]] : []

:javascript
	$(document).ready(function() {
		$('.chosen-control').chosen({
			allow_single_deselect: true,
			no_results_text: 'No se encontraron resultados',
			width: '100%'
		});
		
		//DZC 2019-06-17 13:57:03 se modifica para usar la función verificarModal()
		//$('body').on('change','.contribuyente-radio',function() {
		//	$('.seleccionar-contribuyente-button').removeAttr('disabled'); 
		//});
		verificarModal();

		$('.seleccionar-contribuyente-button').click(function() {
			try {
				//DZC 2019-06-17 13:44:59 se modifica para considerar el contribuyente que ha sido escogido en otra página
				//data=JSON.parse($('.contribuyente-radio:checked').val());
				data=JSON.parse($('table.contribuyentes').DataTable().$('.contribuyente-radio:checked').val());

				$("input#establecimiento_contribuyente_contribuyente_id").val(data.id);
				$("input#establecimiento_contribuyente_rut_contribuyente").val(data.rut);
				$("input#establecimiento_contribuyente_nombre_contribuyente").val(data.razon_social);
				checkFieldValidity($("input#establecimiento_contribuyente_contribuyente_id"));
				//$("i.deseleccionar-contribuyente").show();
			} catch(e) {
				alert("Ocurrió un error. Intente nuevamente o contáctese con el administrador del sitio.\n\nMensaje de error: "+e);
			}
		});
		htmlErrorToTooltip('top');

		$('#btn_mostrar_mapa').click(function(e){
		  e.preventDefault();
		  hideTooltipError($(this));
		  direccionAMapa();
		});

		$('#establecimiento_contribuyente_direccion').on('keyup',function(){
		  if($(this).val() != ""){
		    $('#btn_mostrar_mapa').removeClass('d-none');
		  }else{
		    $('#btn_mostrar_mapa').addClass('d-none');
		  }
		});

		//permite cargar las regiones segun el pais seleccionado
		$("#establecimiento_contribuyente_pais_id").on("change", function(){
			if($.isNumeric($(this).val())){
		    $.ajax({
		      url: "#{get_regiones_admin_establecimientos_path}",
		      type: "GET",
		      dataType: "script",
		      data: { pais_id: $(this).val() }
		    });
		   }
		});

		//permite cargar las comunas segun la region seleccionada
		$("#establecimiento_contribuyente_region_id").on("change", function(){
			if($.isNumeric($(this).val())){
		    $.ajax({
		      url: "#{get_comunas_admin_establecimientos_path}",
		      type: "GET",
		      dataType: "script",
		      data: { region_id: $(this).val() }
		    });
		   }
		});


		loadScript();
	});


	$(document).on('nested:fieldAdded:proveedor_tipo_proveedores', function(e){
		checkFieldValidity($('#contribuyente_id'));
	});
	$(document).on('nested:fieldRemoved:proveedor_tipo_proveedores', function(e){
		$(e.target).closest('tr').addClass('nested-row-removed');
		submitBtn = $(e.target).parents('form').find('.btn-disabled');
		if ( $('select.tp-proveedor').parents('.fields:not([style="display: none;"])').length == 0 ) {
			submitBtn.attr('disabled','disabled');
		}
	})

	function initMap(){
	  var uluru = {lat: -33.4429091, lng: -70.6538699};
	  map = new google.maps.Map(document.getElementById('map'), {
	    zoom: 5,
	    center: uluru
	  });

	  marker = new google.maps.marker.AdvancedMarkerElement({
	    position: uluru,
	    map: null
	  });

	  map.addListener('click', function(e) {
	    marker.setPosition(e.latLng);
	    marker.setMap(map);
	    mapaADireccion(e.latLng);
	  });

	  geocoder = new google.maps.Geocoder();

	  direccionAMapa();

	}

	function loadScript() {
	  var script = document.createElement("script");
	  script.type = "text/javascript";
	  script.src = "https://maps.googleapis.com/maps/api/js?key=#{Rails.application.secrets.google_api_key}&language=es&callback=initMap";
	  document.body.appendChild(script);
	}

	function direccionAMapa() {
	  var address = $('#establecimiento_contribuyente_direccion').val();
	  geocoder.geocode( { 'address': address}, function(results, status) {
	    if (status == 'OK') {
	      map.setCenter(results[0].geometry.location); 
	      map.setZoom(18);
	      marker.setPosition(results[0].geometry.location);
	      marker.setMap(map);
	      $('#establecimiento_contribuyente_latitud').val(""+results[0].geometry.location.lat());
	      $('#establecimiento_contribuyente_longitud').val(""+results[0].geometry.location.lng());
	    } else {
	      console.log('Geocode was not successful for the following reason: ' + status);
	    }
	  });
	}

	function mapaADireccion(latLng) {
	  geocoder.geocode({'location': latLng}, function(results, status) {
	    if (status === 'OK') {
	      if (results[0]) {
	        $('#establecimiento_contribuyente_direccion').val(results[0].formatted_address);
	        $('#establecimiento_contribuyente_latitud').val(""+latLng.lat());
	        $('#establecimiento_contribuyente_longitud').val(""+latLng.lng());
	      } else {
	        $('#establecimiento_contribuyente_direccion').val('Dirección no cargada');
	      }
	    } else {
	      $('#establecimiento_contribuyente_direccion').val('Dirección no cargada');
	    }
	    // actualizar_previsualizacion();
	  });
	}

- url = !@establecimiento.id.nil? ? admin_establecimiento_path(@establecimiento) : admin_establecimientos_path
= simple_nested_form_for [:admin,@establecimiento], url: url, remote: true, html: { autocomplete: :off, class: 'establecimiento-form' } do |f|
	= f.input :contribuyente_id, as: :hidden, wrapper: false, input_html: { class: 'required-field' }
	- fields_visibility = f.object.fields_visibility
	.row
		.col-12
			.card
				.card-header
					%h5.no-margin
						= action_label_of_(@establecimiento)
				.card-body
					.row
						.col-lg-6.pr-lg-0.col-12
							.row
								.col-lg-2.pr-0.col-md-2.col-4
									.form-group.integer.required.proveedor_contribuyente_id
										%label.string.control-label.required
											%abbr{title: :required}*
											= t(:institución)
										= link_to '#', "data-toggle"=>:modal, "data-target"=>"#buscar-contribuyente", class: 'form-control btn btn-primary' do
											%i.fa.fa-search-plus
											Buscar
								.col-lg-0.col-md-10.col-8
									= f.input :rut_contribuyente, label: t(:rut), input_html: { class: 'required-field' }, readonly: true, placeholder: "12345678-9", required: true
									//%i.fa.fa-times.deseleccionar-contribuyente
							.row
								.col-12
									= f.input :nombre_contribuyente, label: t(:nombre_institución), input_html: { class: 'required-field' }, readonly: true, placeholder: "Razón social de la institución", required: true
									= f.input :casa_matriz, as: :boolean, label: t(:casa_matriz)
							.row
								.col-6
									= f.input :nombre_de_establecimiento, label: t(:indicar_nombre)
								.col-6
									= f.input :tipo_de_establecimiento, label: t(:indicar_tipo)
							.row
								.col-6
									= f.input :telefono, label: t(:indicar_telefono), input_html: { class: 'validado' }
								.col-6
									= f.input :email, label: t(:indicar_email), input_html: { class: 'validado' }
							.row
								.col-12
									= f.input :direccion, label: t(:indicar_lugar), required: true, input_html: { class: 'required-field'}
									= f.hidden_field :latitud
									= f.hidden_field :longitud
									=# f.input :fields_visibility, :as => :hidden, input_html: { :value => "carlos"}
								.col-12
									= button_tag class: "btn btn-success btn-sm d-none", id: "btn_mostrar_mapa" do
										%i.fa.fa-map-marker
										=t(:mostrar_en_mapa)
							.row
								.col-12
									= f.input :ciudad, label: t(:indicar_ciudad), required: true, input_html: { class: 'required-field'}
							.row
								.col-lg-4.pr-0.col-md-2.col-4
									%label.control-label.required
										%abbr{title: :required}*
										=t(:país)
									= f.select :pais_id, Pais::opciones_por_continente, {:include_blank => 'Seleccione un país'}, { class: 'form-control contribuyente-establecimiento-region required-field'}
								.col-4
									%label.control-label.required
										%abbr{title: :required}*
										=t(:región)
									= f.select :region_id, @regiones_select, {:include_blank => 'Seleccione una región'}, { class: 'form-control regiones required-field' }
								.col-4
									%label.control-label.required
										%abbr{title: :required}*
										=t(:comuna)
									= f.select :comuna_id, @comunas_select, {:include_blank => 'Seleccione una comuna'}, { class: 'form-control comuna required-field' }
						.col-lg-6.col-12.mt-3
							%div#map{style: "height: 440px;"}
			-if f.object.persisted? && PrivacidadPermiso.posee_eleccion_usuario("establecimientos")
				= render 'privacidad', fields_visibility: fields_visibility
							
	.float-right
		= link_to t(:back), admin_establecimientos_path, class: 'btn btn-sm btn-warning'
		= button_tag t(:save), 'data-disable-with' => "<i class='fa fa-spinner fa-spin'></i> Guardando...".html_safe, id: 'consultar-button', class: "btn btn-sm btn-primary btn-disabled", disabled: :disabled

=# render 'admin/contribuyentes/buscador', es_para_seleccion: true, buscar_por_actividad_economica: true, resultado_mostrados: 10
=# render 'admin/establecimientos/buscador', es_para_seleccion: true
= render 'admin/contribuyentes/buscador', es_para_seleccion: true
