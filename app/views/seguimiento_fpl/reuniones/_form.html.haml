:javascript
  var map;
  var marker;
  var geocoder;

  $(document).ready(function() {

    $('.destinatarios').DataTable({
      language: {
        url: "#{asset_path('spanish.json')}"
      },
      responsive: true,
      paginate: false,
      searching: false,
      columnDefs: [ { targets: [0], orderable: false }], 
    });

    $('#btn_mostrar_mapa').click(function(e){
      e.preventDefault();
      hideTooltipError($(this));
      direccionAMapa();
    });

    $('#reunion_direccion').on('keyup',function(){
      if($(this).val() != ""){
        $('#btn_mostrar_mapa').removeClass('d-none');
      }else{
        $('#btn_mostrar_mapa').addClass('d-none');
      }
      actualizar_previsualizacion();
    });

    $('#reunion_fecha').on('change',function(){
      actualizar_previsualizacion();
    });

    $('#seleccionar').change(function(){
      $("input[name='destinatarios[]']").prop('checked', $(this).is(':checked'));
    });

    loadScript();

  });

  function initMap(){
    var uluru = {lat: -33.4429091, lng: -70.6538699};
    map = new google.maps.Map(document.getElementById('map'), {
      zoom: 5,
      center: uluru
    });

    marker = new google.maps.Marker({
      position: uluru,
      map: null
    });

    map.addListener('click', function(e) {
      marker.setPosition(e.latLng);
      marker.setMap(map);
      mapaADireccion(e.latLng);
    });

    geocoder = new google.maps.Geocoder();

    direccionAMapa();

  }

  function loadScript() {
    var script = document.createElement("script");
    script.type = "text/javascript";
    script.src = "https://maps.googleapis.com/maps/api/js?key=#{Rails.application.secrets.google_api_key}&language=es&callback=initMap";
    document.body.appendChild(script);
  }


  function direccionAMapa() {
    var address = $('#reunion_direccion').val();
    geocoder.geocode( { 'address': address}, function(results, status) {
      if (status == 'OK') {
        map.setCenter(results[0].geometry.location); 
        map.setZoom(18);
        marker.setPosition(results[0].geometry.location);
        marker.setMap(map);
        $('#reunion_lat').val(""+results[0].geometry.location.lat());
        $('#reunion_lng').val(""+results[0].geometry.location.lng());
      } else {
        console.log('Geocode was not successful for the following reason: ' + status);
      }
    });
  }

  function mapaADireccion(latLng) {
    geocoder.geocode({'location': latLng}, function(results, status) {
      if (status === 'OK') {
        if (results[0]) {
          $('#reunion_direccion').val(results[0].formatted_address);
          $('#reunion_lat').val(""+latLng.lat());
          $('#reunion_lng').val(""+latLng.lng());
        } else {
          $('#reunion_direccion').val('Dirección no cargada');
        }
      } else {
        $('#reunion_direccion').val('Dirección no cargada');
      }
      actualizar_previsualizacion();
    });
  }

  function actualizar_previsualizacion(){
    var fecha = $('#reunion_fecha').val();
    var lugar = $('#reunion_direccion').val();
    var encabezado = $('#encabezado_base').val();
    var mensaje = $('#mensaje_base').val();

    if(fecha != ""){
      encabezado = encabezado.replace(/\[fecha_reunion\]/g, fecha);
      mensaje = mensaje.replace(/\[fecha_reunion\]/g, fecha);
    }

    if(lugar != ""){
      encabezado = encabezado.replace(/\[lugar_reunion\]/g, lugar);
      mensaje = mensaje.replace(/\[lugar_reunion\]/g, lugar);
    }

    $('#reunion_encabezado').val(encabezado);
    $('#reunion_mensaje').val(mensaje);

  }

- titulo t(:agendar_reunión)
= simple_form_for @reunion, remote: true, url: seguimiento_fpl_proyecto_reuniones_path(@tarea_pendiente, @proyecto), html: {autocomplete: 'off'} do |f|
  .row
    .col-12
      .card
        .card-header
          %h5.no-margin=titulo_proyecto.html_safe
        .card-body
          .row
            .col-lg-6.col-12
              .row
                .col-12
                  = f.input :fecha, label: t(:indicar_fecha), input_html: { class: 'required-field basic-datetimepicker-min-today'}, as: :string, required: true
                .col-12
                  = f.input :direccion, label: t(:indicar_lugar), required: true, input_html: { class: 'required-field'}
                  = f.hidden_field :lat
                  = f.hidden_field :lng
                .col-12
                  = button_tag class: "btn btn-success btn-sm d-none", id: "btn_mostrar_mapa" do
                    %i.fa.fa-map-marker
                    =t(:mostrar_en_mapa)
            .col-lg-6.col-12.mt-3
              %div#map{style: "height: 300px;"}
        %hr
        .card-body
          .row
            .col-12
              .form-inputs
                = f.input :encabezado, label: t(:encabezado_mensaje), readonly: true, input_html: {value: @encabezado}
                %input{type: "hidden", id: "encabezado_base", value: @encabezado}
                = f.input :mensaje, label: t(:mensaje), as: :text, readonly: true, input_html: { class: 'required-field', value: @cuerpo_mensaje, rows: 10}
                %input{type: "hidden", id: "mensaje_base", value: @cuerpo_mensaje}
  .row
    .col-12
      .card
        .card-header
          %h5.no-margin=t(:destinatarios)
        .card-body
          %table.table.table-striped.destinatarios
            %thead
              %tr
                %th
                  = check_box_tag :seleccionar, '', false, class: "not-required-if-other-like-me-is-present"
                %th=t(:nombre)
                %th=t(:rut)
                %th=t(:institución)
                %th=t(:rut_institución)
                %th=t(:roles)
            %tbody
              - @destinatarios.each do |dest|
                %tr
                  %td
                    = check_box_tag "destinatarios[]", dest[:id], false, class: "not-required-if-other-like-me-is-present"
                  %td=dest[:nombre_completo]
                  %td=dest[:rut]
                  %td=dest[:institucion]
                  %td=dest[:rut_institucion]
                  %td
                    .ul
                      =dest[:rol].to_s.html_safe
  .float-right
    = volver_root
    = button_tag t(:save), 'data-disable-with' => "<i class='fa fa-spinner fa-spin'></i> Guardando...".html_safe, id: 'consultar-button', class: "btn btn-sm btn-primary btn-disabled button-send", disabled: :disabled
    %br
    %br
