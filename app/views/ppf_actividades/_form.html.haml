:javascript
	$(document).ready(function() {
		$('.chosen-control').chosen(chosenOptions);
		htmlErrorToTooltip('top');
		$('.tipo-actividad').chosen().on('change', function(e){
			cargar_link($(this))			
		});
	});
	$(document).on('nested:fieldAdded:ppf_actividad', function(e) {
		$(e.target).find('select').chosen(chosenOptions);
		$('.tipo-actividad').chosen().on('change', function(e){
			cargar_link($(this))		
		});
		initDateTimePicker()
	});
	$(document).on('nested:fieldRemoved:ppf_actividad', function(e) {
		$('#consultar-button').removeAttr('disabled'); 
	});
	function cargar_link(e){
		if(e.val() == 1){
			e.closest("tr").children('td:eq(5)').html( "<a target='_blank' href='#{ppf_preparar_convocatoria_path(@tarea_pendiente)}''>Preparar Convocatoria</a>");
		}else if(e.val() == 2){
			e.closest("tr").children('td:eq(5)').html( "<a target='_blank' href='#{ppf_cargar_actividades_path(@tarea_pendiente)}''>Cargar Plan de Actividades</a>");
		}else if(e.val() == 3){
			e.closest("tr").children('td:eq(5)').html( "<a target='_blank' href='#{ppf_cargar_resultados_auditoria_path(@tarea_pendiente)}''>Cargar Resultados Seguimineto</a>");
		}
	}
- titulo t(:Agenda)
= simple_nested_form_for @ppp, url: ppf_agenda_update_path, remote: true, html: { autocomplete: :off } do |f|
	.row
		.col-12
			.row
				.col-12
					.form-group
						.card.mb-0
							.card-header
								%h5.no-margin.float-left
									%abbr{:title => "required"} *
									= t(:Agenda)
								= f.link_to_add :ppf_actividad, data: { target: "#actividades" }, class: 'float-right' do
									Generar actividad
									%i.fa.fa-plus-circle
							.card-body.p-0
								%table#actividades.table.table-striped.mb-0
									%thead
										%tr
											%th=t(:fecha)
											%th=t(:tipo_actividad)											
											%th=t(:contribuyente)
											%th=t(:comuna)
											%th=t(:direccion)
											%th=t(:subir_documentacion)
											%th=t(:estado)
											%th=t(:observaciones)
											%th.pr-2.pl-2.remove-cell=t(:eliminar)
									%tbody
										= f.fields_for :ppf_actividad, :wrapper => false  do |ep|
											%tr.fields
												%td.p-0.fecha-rendicion
													= ep.input :fecha, label: false, input_html: { class: 'm-0 required-field basic-datetimepicker-min-today', value: ((ep.object.fecha.blank?) ? nil : localize(ep.object.fecha))}, as: :string, required: true, wrapper_class: 'm-0'
												%td
													-if @contribuyentes.count > 0
														-requerida = 'required-field'
														= ep.input :ppf_tipo_actividad_id, label: false, collection: PpfTipoActividad.all.map{|m|[m.nombre,m.id]}, input_html: { class: 'm-0 chosen-control required-field tipo-actividad', type: :string, 'data-placeholder': 'Seleccione un tipo de actividad' }, required: true, wrapper_class: 'm-0'	
													- else
														-requerida = nil
														= ep.input :ppf_tipo_actividad_id, label: false, collection: PpfTipoActividad.where(id: PpfTipoActividad::PPF_CONVOCATORIA).map{|m|[m.nombre,m.id]}, input_html: { class: 'm-0 chosen-control required-field tipo-actividad', type: :string, 'data-placeholder': 'Seleccione un tipo de actividad' }, required: true, wrapper_class: 'm-0'
												%td
													= ep.input :contribuyente_id, label: false, collection: @contribuyentes.map{|m|[m.nombre,m.id]}, input_html: { class: 'm-0 chosen-control #{requerida}', type: :string, 'data-placeholder': 'Seleccione un contribuyente'}, required: true, wrapper_class: 'm-0'
												%td
													= ep.input :comuna_id, label: false, collection:Comuna.all.map{|m|[m.nombre,m.id]}, input_html: { class: 'm-0 chosen-control required-field', type: :string, 'data-placeholder': 'Seleccione una comuna'}, required: true, wrapper_class: 'm-0'
												%td
													= ep.input :direccion, as: :text, label: false, input_html: { class: 'm-0 required-field', rows: 2}, required: true, wrapper_class: 'm-0'
												%td
													-if ep.object.new_record?
														= "Seleccione tipo"
													-elsif ep.object.ppf_tipo_actividad_id == 1
														= link_to t(:preparar_convocatoria), ppf_preparar_convocatoria_path(@tarea_pendiente), target: :_blank
													-elsif ep.object.ppf_tipo_actividad_id == 2
														= link_to "Cargar Plan de Actividades", ppf_cargar_actividades_path(@tarea_pendiente), target: :_blank
													-elsif ep.object.ppf_tipo_actividad_id == 3
														= link_to "Cargar Resultados Seguimineto", ppf_cargar_resultados_auditoria_path(@tarea_pendiente), target: :_blank
												%td
													= ep.input :estado_tecnica_id, label: false, collection:  [['Realizada', true] ,['Por realizar', false]], input_html: { class: 'm-0 chosen-control checkbox', 'data-placeholder': 'Seleccione un estado'}, wrapper_class: 'm-0'
												%td
													= ep.input :observaciones, as: :text, label: false, input_html: { class: 'm-0', rows: 2}, wrapper_class: 'm-0'		
												%td.remove-cell
													= ep.link_to_remove do
														%i.fa.fa-times-circle.left.link-to-remove-row	
	.float-left
		- if !@ppp.adhesiones.blank?		
			-if @ppp.adhesiones.last.archivo_elementos.present?
				= link_to ppf_agenda_descargar_path(@tarea_pendiente), class: 'btn btn-sm btn-outline-secondary btn-block' do
					%i.fa.fa-download
					= t(:descargar_establecimientos_adheridos)						
	.float-right
		= link_to t(:back), root_path, class: 'btn btn-sm btn-warning'
		= button_tag t(:save), 'data-disable-with' => "<i class='fa fa-spinner fa-spin'></i> Guardando...".html_safe, id: 'consultar-button', class: "btn btn-sm btn-primary btn-disabled", disabled: :disabled
								