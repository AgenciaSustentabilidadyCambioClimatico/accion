:javascript
  $(document).ready(function(){
    var anular_confirmado = false;
    $('#guardar-fondo-temporal-button').click(function(){

      $('.loading-data').show();

      const button = document.getElementById('guardar-fondo-temporal-button');
      button.innerHTML = '<i class="fa fa-spinner fa-spin"></i> Guardando...';
      button.disabled = true;

      const button1 = document.getElementById('enviar-postulacion-button');
      button1.disabled = true;

      var tipoInstrumentoValores = {
        LINEA_1_1: #{@tipo_instrumento_valores[:linea_1_1]},
        LINEA_5_1: #{@tipo_instrumento_valores[:linea_5_1]},
        LINEA_1_2_1: #{@tipo_instrumento_valores[:linea_1_2_1]},
        LINEA_1_2_2: #{@tipo_instrumento_valores[:linea_1_2_2]},
        LINEA_1_3: #{@tipo_instrumento_valores[:linea_1_3]},
        EXTRAPRESUPUESTARIO_DIAGNOSTICO: #{@tipo_instrumento_valores[:extrapresupuestario_diagnostico]},
        EXTRAPRESUPUESTARIO_SEGUIMIENTO: #{@tipo_instrumento_valores[:extrapresupuestario_seguimiento]},
        EXTRAPRESUPUESTARIO_SEGUIMIENTO_2: #{@tipo_instrumento_valores[:extrapresupuestario_seguimiento_2]},
        EXTRAPRESUPUESTARIO_EVALUACION: #{@tipo_instrumento_valores[:extrapresupuestario_evaluacion]}
      };

      var tipoInstrumentoId = #{ @flujo.tipo_instrumento_id };

      var duracion = document.getElementById('duracion').value;
      var fortalezas_consultores = document.getElementById('fortalezas_consultores').value; 
      var empresas_asociadas_ag = 0;   
      var empresas_no_asociadas_ag = 0;
      var cantidad_micro_empresa = 0; 
      var cantidad_pequeña_empresa = 0;
      var cantidad_mediana_empresa = 0; 
      var cantidad_grande_empresa = 0;
      var elementos_micro_empresa = 0;
      var elementos_pequena_empresa = 0;
      var elementos_mediana_empresa = 0;
      var elementos_grande_empresa = 0;
      var empresas_adh = '';

      const datos = [];
    
      if (tipoInstrumentoId === tipoInstrumentoValores.LINEA_1_1 || 
          tipoInstrumentoId === tipoInstrumentoValores.LINEA_5_1 || 
          tipoInstrumentoId === tipoInstrumentoValores.EXTRAPRESUPUESTARIO_DIAGNOSTICO) {

        cantidad_micro_empresa = document.getElementById('cantidad_micro_empresa').value;
        cantidad_pequeña_empresa = document.getElementById('cantidad_pequeña_empresa').value;
        cantidad_mediana_empresa = document.getElementById('cantidad_mediana_empresa').value;
        cantidad_grande_empresa = document.getElementById('cantidad_grande_empresa').value;
      }
      
      if (tipoInstrumentoId === tipoInstrumentoValores.LINEA_1_1 || 
          tipoInstrumentoId === tipoInstrumentoValores.LINEA_5_1 || 
          tipoInstrumentoId === tipoInstrumentoValores.EXTRAPRESUPUESTARIO_DIAGNOSTICO) {

        empresas_asociadas_ag = document.getElementById('empresas_asociadas_ag').value;
        empresas_no_asociadas_ag = document.getElementById('empresas_no_asociadas_ag').value;

        const listaSeleccionados = document.querySelector('.list-group.seleccionados_tree.m-0');
        
        if (listaSeleccionados) {
          const items = listaSeleccionados.querySelectorAll('li.list-group-item');
          items.forEach(item => {
            const id = item.id; // Obtenemos el ID del elemento <li>
            const nombre= item.childNodes[0].textContent.trim(); // Obtenemos el nombre de la comuna
            const tipo = item.querySelector('.type').textContent.trim(); // Obtenemos el tipo (comuna, provincia, región)
            
            datos.push({
              id: id,
              nombre: nombre,
              tipo: tipo
            });
          });
          
          console.log(datos); // Muestra los datos en la consola
        }  
      }
      
      if (tipoInstrumentoId === tipoInstrumentoValores.LINEA_1_3 || 
          tipoInstrumentoId === tipoInstrumentoValores.EXTRAPRESUPUESTARIO_EVALUACION ||
          tipoInstrumentoId === tipoInstrumentoValores.LINEA_1_2_1 || 
          tipoInstrumentoId === tipoInstrumentoValores.LINEA_1_2_2 || 
          tipoInstrumentoId === tipoInstrumentoValores.EXTRAPRESUPUESTARIO_SEGUIMIENTO || 
          tipoInstrumentoId === tipoInstrumentoValores.EXTRAPRESUPUESTARIO_SEGUIMIENTO_2) {

        // Selecciona todos los checkboxes que tengan la clase 'seleccionar-elemento-adhesion'
        const checkboxes = document.querySelectorAll('input.form-control.seleccionar-elemento-adhesion.mt-2:checked');
        
        // Crea un array para almacenar los valores de los checkboxes seleccionados
        const empresas_adheridas = Array.from(checkboxes).map(checkbox => checkbox.value);
        empresas_adh = empresas_adheridas;
      }
    
      $.ajax({
        url: "#{guardar_fondo_temporal_fondo_produccion_limpia_path}",
        data: {
          flujo_id: "#{@fondo_produccion_limpia.nil? ? '' : @fondo_produccion_limpia.flujo.id}",
          tipo_instrumento_id: tipoInstrumentoId,
          cantidad_micro_empresa: cantidad_micro_empresa,
          cantidad_pequeña_empresa: cantidad_pequeña_empresa,
          cantidad_mediana_empresa: cantidad_mediana_empresa,
          cantidad_grande_empresa: cantidad_grande_empresa,
          empresas_asociadas_ag: empresas_asociadas_ag,
          empresas_no_asociadas_ag: empresas_no_asociadas_ag,
          duracion: duracion,
          fortalezas_consultores: fortalezas_consultores,
          comunasIds : JSON.stringify(datos),
          elementos_micro_empresa: elementos_micro_empresa,
          elementos_pequena_empresa: elementos_pequena_empresa,
          elementos_mediana_empresa: elementos_mediana_empresa,
          elementos_grande_empresa: elementos_grande_empresa,
          empresas_adheridas: empresas_adh         
        },
        method: "GET",
        success: function(response) {
        },
        error: function(error) {
          console.error("Error al llamar al método del controlador", error);
          $('.loading-data').hide();
          button.innerHTML = 'Guardar cambios temporales';
          button.disabled = false;
        }
      });
    });

    $('#anular_y_eliminar').click(function(e){
      if(!anular_confirmado){
        e.preventDefault();
        dataConfirmModal.confirm({
          title: 'Confirme antes de continuar',
          text: "Esta acción eliminará la información ingresada en la manifestación de interés",
          commit: 'Confirmar',
          cancel: 'Cancelar',
          zIindex: 10099,
          onConfirm: function() { 
            dataConfirmModal.confirm({
              title: 'Confirme antes de continuar',
              text: "¿Desea anular y eliminar la postulación al Acuerdo?",
              commit: 'Si, anular y eliminar',
              cancel: 'No',
              zIindex: 10099,
              onConfirm: function() { 
                anular_confirmado = true;
                $("#manifestacion_de_interes_anulado").val(true);
                $('#anular_y_eliminar').trigger("click");
              },
              onCancel:  function() {
              },
              onHide:    function() {
              }
            });
          },
          onCancel:  function() {
          },
          onHide:    function() {
          }
        });
      }
    });
    
    $('#enviar-postulacion-button').click(function(e){
      var tipo = document.getElementById('tipos').getAttribute('data-tipo');
      const button = document.getElementById('enviar-postulacion-button');
      const button_guardar = document.getElementById('guardar-fondo-temporal-button');
      $('.loading-data').show();
      if(confirm("¿Está seguro que desea enviar?")){
        $.ajax({
          url: "#{get_valida_campos_nulos_fondo_produccion_limpia_path}",
          data: {
            flujo_id: "#{@fondo_produccion_limpia.nil? ? '' : @fondo_produccion_limpia.flujo.id}",
            tipo: tipo
          },
        method: "GET",
          success: function(response) {
            button.innerHTML = '<i class="fa fa-spinner fa-spin"></i> Enviando...';
            button.disabled = true;
            button_guardar.disabled = true;
          },
          error: function(error) {
            console.error("Error al llamar al método del controlador", error);
            $('.loading-data').hide();
            button.innerHTML = '<i class="fa fa-arrow-circle-right"></i> Enviar postulación';
            button.disabled = false;
            button_guardar.disabled = false;
          }
        });  
      }else{
        $('.loading-data').hide();
        button.innerHTML = '<i class="fa fa-arrow-circle-right"></i> Enviar postulación';
        button.disabled = false;
        button_guardar.disabled = false;
      }
    });

    $('body').on('ajax:complete','#fondo-produccion-limpias-form',function(xhr,status){ $('.loading-data').show()});
  });
- solo_lectura = @tarea_pendiente.estado_tarea_pendiente_id == EstadoTareaPendiente::ENVIADA || @solo_lectura == 'solo_lectura'
- titulo t(:postulacion_fondo_produccion_limpia)
- tabs = { "propuesta-tecnica": true, "equipo-trabajo": false, "plan-de-actividades": false, "documentacion-legal": false, "costos": false }
- formulario_remote = true #flag para mostrar/ocultar el botón de guardado
- mantener_temporal = @mantener_temporal.present? ? @mantener_temporal : false #permite mantener el archivo temporal, a pesar de no tener errors.-
= simple_form_for [@fondo_produccion_limpia], :url => guardar_fondo_temporal_fondo_produccion_limpia_path, method: :patch, remote: formulario_remote, html: { autocomplete: :off, multipart: true, id: 'fondo-produccion-limpias-form', class: 'ajax-form'} do |f|
  .row
    .col-12
      .card
        .card-header.p-0
          .p-3
            %h5.no-margin=titulo_instrumento_fpl.html_safe
            %h5.no-margin=titulo_instrumento.html_safe
            %h5.no-margin=titulo_proyecto_fpl.html_safe
            %h5.no-margin=titulo_apl.html_safe
            %h5.no-margin=datos_beneficiario_fpl.html_safe
        = f.input :id, as: :hidden, wrapper: false, input_html: { value: @tarea_pendiente.id, id: 'tarea_pendiente_id' }  
        = f.submit "", class: 'd-none'
        #tab-menu-controls.mb-0.mt-3.px-2{:role => "tabpanel"}
          %ul#manifestacion.nav.nav-tabs{:role => "tablist"}
            - tabs.each do |tab,active|
              %li.nav-item.tab-block{id: "#{tab}-tab"}
                %a.nav-link.tab-block{id: "#{tab}-tab", class: (:active if active), "aria-controls" => tab, "aria-expanded" => "true", "data-toggle" => "tab", :href => "##{tab}", :role => "tab"}
                  =t(tab.to_s.gsub('-','_'))
                - if !@total_de_errores_por_tab.blank? && @total_de_errores_por_tab.has_key?(tab) && @total_de_errores_por_tab[tab].present? && @total_de_errores_por_tab[tab].size > 0
                  %small.total-error
                    = @total_de_errores_por_tab[tab]
            - if @manifestacion_de_interes.errors.messages.size < 1 &&  !mantener_temporal
              - formulario_remote = false
        = render "form_fondo_produccion_limpia", tabs: tabs, f: f, solo_lectura: solo_lectura
  -if !solo_lectura
    .float-left
      -#= button_tag t(:anular_y_eliminar), id: 'anular_y_eliminar', class: "btn btn-sm btn-danger"
      = link_to t(:descargar_postulacion), descargar_formulario_fpl_fondo_produccion_limpia_path(@tarea_pendiente.flujo_id), class: "btn btn-success btn-sm"
    .float-right
      = link_to t(:back), root_path, class: 'btn btn-sm btn-warning'
      = button_tag t(:guardar_cambios_temporales), 'data-disable-with' => "<i class='fa fa-spinner fa-spin'></i> Guardando...".html_safe, id: 'guardar-fondo-temporal-button', class: "btn btn-sm btn-primary"
      = button_tag t(:enviar_postulación), 'data-disable-with' => "<i class='fa fa-spinner fa-spin'></i> Enviando...".html_safe, id: 'enviar-postulacion-button', class: "btn btn-success btn-sm float-right ml-1"

= render 'fondo_produccion_limpias/buscador'
= render 'fondo_produccion_limpias/contribuyentes/buscador', es_para_seleccion: true