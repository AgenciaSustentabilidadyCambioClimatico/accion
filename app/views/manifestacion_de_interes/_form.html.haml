:javascript
  $(document).ready(function(){
    var anular_confirmado = false;
    $('#guardar-manifestacion-temporal-button').click(function(){
      $('#enviar-manifestacion-button').removeAttr('data-disable-with');
    });
    $('#enviar-manifestacion-button').click(function(){
      $('#manifestacion_de_interes_temporal').val(false);
      $('#guardar-manifestacion-temporal-button').removeAttr('data-disable-with');
    });
    $('#anular_y_eliminar').click(function(e){
      if(!anular_confirmado){
        e.preventDefault();
        dataConfirmModal.confirm({
          title: 'Confirme antes de continuar',
          text: "Esta acción eliminará la información ingresada en la manifestación de interés",
          commit: 'Confirmar',
          cancel: 'Cancelar',
          zIindex: 10099,
          onConfirm: function() { 
            dataConfirmModal.confirm({
              title: 'Confirme antes de continuar',
              text: "¿Desea anular y eliminar la postulación al Acuerdo?",
              commit: 'Si, anular y eliminar',
              cancel: 'No',
              zIindex: 10099,
              onConfirm: function() { 
                anular_confirmado = true;
                $("#manifestacion_de_interes_anulado").val(true);
                $('#anular_y_eliminar').trigger("click");
              },
              onCancel:  function() {
              },
              onHide:    function() {
              }
            });
          },
          onCancel:  function() {
          },
          onHide:    function() {
          }
        });
      }
    });

  });
- solo_lectura = @tarea_pendiente.estado_tarea_pendiente_id == EstadoTareaPendiente::ENVIADA
- titulo t(:manifestación_de_acuerdo)
- tabs = { "objetivo-acuerdo": true, "contexto-sector": false, "actores-y-partes-interesadas": false, "datos-institucion": false, "datos-proyecto": false }
- formulario_remote = true #flag para mostrar/ocultar el botón de guardado
- mantener_temporal = @mantener_temporal.present? ? @mantener_temporal : false #permite mantener el archivo temporal, a pesar de no tener errors.-
= simple_form_for [@tarea_pendiente, @manifestacion_de_interes], method: :patch, remote: formulario_remote, html: { autocomplete: :off, multipart: true, id: 'manifestacion-de-interes-form' } do |f|
  = f.hidden_field :temporal, as: :boolean, value: formulario_remote
  = f.hidden_field :anulado, as: :boolean, value: false
  = f.input :current_tab, as: :hidden, wrapper: false, input_html: { value: (f.object.current_tab.blank? ? 'objetivo-acuerdo' : f.object.current_tab) }
  = f.submit "", class: 'd-none'
  #tab-menu-controls.mb-0.mt-3.px-2{:role => "tabpanel"}
    %ul#manifestacion.nav.nav-tabs{:role => "tablist"}
      - tabs.each do |tab,active|
        %li.nav-item.tab-block{id: "#{tab}-tab"}
          %a.nav-link.tab-block{id: "#{tab}-tab", class: (:active if active), "aria-controls" => tab, "aria-expanded" => "true", "data-toggle" => "tab", :href => "##{tab}", :role => "tab"}
            =t(tab.to_s.gsub('-','_'))
          - if !@total_de_errores_por_tab.blank? && @total_de_errores_por_tab.has_key?(tab) && @total_de_errores_por_tab[tab].size > 0
            %small.total-error
              = @total_de_errores_por_tab[tab].size
      - if @manifestacion_de_interes.errors.messages.size < 1 &&  !mantener_temporal
        - formulario_remote = false
  = render "form_manifestacion_de_interes", tabs: tabs, f: f, solo_lectura: solo_lectura
  -if !solo_lectura
    .float-left
      = button_tag t(:anular_y_eliminar), id: 'anular_y_eliminar', class: "btn btn-sm btn-danger"
    .float-right
      = link_to t(:back), root_path, class: 'btn btn-sm btn-warning'
      -#
        = button_tag t(:guardar_cambios_temporales), 'data-disable-with' => "<i class='fa fa-spinner fa-spin'></i> Guardando...".html_safe, class: "btn btn-sm btn-primary #{formulario_remote ? 'd-none' : nil}"
      = button_tag t(:guardar_cambios_temporales), 'data-disable-with' => "<i class='fa fa-spinner fa-spin'></i> Guardando...".html_safe, id: 'guardar-manifestacion-temporal-button', class: "btn btn-sm btn-primary"
      = button_tag 'data-disable-with' => "<i class='fa fa-spinner fa-spin'></i> Enviando...".html_safe, id: 'enviar-manifestacion-button', class: "btn btn-success btn-sm float-right ml-1" do # related-disabled-button btn-disabled", disabled: :disabled do
        %i.fa.fa-arrow-circle-right
        = t(:enviar_manifestación_de_interés)
-if !solo_lectura
  = render 'admin/users/buscador'
  - tipo_instrumento = @manifestacion_de_interes.tipo_instrumento_id.present? ? @manifestacion_de_interes.tipo_instrumento_id  : TipoInstrumento::ACUERDO_DE_PRODUCCION_LIMPIA
  = render 'admin/contribuyentes/buscador', es_para_seleccion: false, seleccion_basica: true, tipo_instrumento: tipo_instrumento
