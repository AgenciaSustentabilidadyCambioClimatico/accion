:javascript
	$(document).ready(function(){

		if ($('[type="radio"]:checked').length > 0) {
			obligatoriedadSiEsAdjudicado($('[type="radio"]:checked'),true);
		}

		$('[type="radio"]').click(function(){
			obligatoriedadSiEsAdjudicado(this,true);
		});

		function obligatoriedadSiEsAdjudicado(checkbox,checkValidity) {
			motivosAdjudicacionField = $('#programa_proyecto_propuesta_motivos_adjudicacion');
			fechaAdjudicacionField = $('#programa_proyecto_propuesta_fecha_adjudicacion');
			montoAdjudicadoField = $('#programa_proyecto_propuesta_monto_adjudicado');
			fechaInicioField = $('#programa_proyecto_propuesta_fecha_inicio');
			fechaFinalizacionField = $('#programa_proyecto_propuesta_fecha_finalizacion');

			motivosAdjudicacionLabel = $('label[for="programa_proyecto_propuesta_motivos_adjudicacion"] > abbr');
			fechaAdjudicacionLabel = $('label[for="programa_proyecto_propuesta_fecha_adjudicacion"] > abbr');
			montoAdjudicadoLabel = $('label[for="programa_proyecto_propuesta_monto_adjudicado"] > abbr');
			fechaInicioLabel = $('label[for="programa_proyecto_propuesta_fecha_inicio"] > abbr');
			fechaFinalizacionLabel = $('label[for="programa_proyecto_propuesta_fecha_finalizacion"] > abbr');

			motivosAdjudicacionField.removeClass('required-field');
			fechaAdjudicacionField.removeClass('required-field').attr('disabled','disabled');
			montoAdjudicadoField.removeClass('required-field').attr('disabled','disabled');
			fechaInicioField.removeClass('required-field').attr('disabled','disabled');
			fechaFinalizacionField.removeClass('required-field').attr('disabled','disabled');

			motivosAdjudicacionLabel.hide();
			fechaAdjudicacionLabel.hide();
			montoAdjudicadoLabel.hide();
			fechaInicioLabel.hide();
			fechaFinalizacionLabel.hide();

			id  = $(checkbox).attr("id");
			if(~id.indexOf("false")) {
				motivosAdjudicacionLabel.show();
				motivosAdjudicacionField.addClass('required-field');
			} else if (~id.indexOf("true")) {
				fechaAdjudicacionLabel.show();
				montoAdjudicadoLabel.show();
				fechaInicioLabel.show();
				fechaFinalizacionLabel.show();
				motivosAdjudicacionField.addClass('required-field').removeAttr('disabled');
				fechaAdjudicacionField.addClass('required-field').removeAttr('disabled');
				montoAdjudicadoField.addClass('required-field').removeAttr('disabled');
				fechaInicioField.addClass('required-field').removeAttr('disabled');
				fechaFinalizacionField.addClass('required-field').removeAttr('disabled');
			}

			if ( checkValidity ) {
				checkFieldValidity(motivosAdjudicacionField);
			}
		}
		$('#finalizar-programa-modal').modal({backdrop:'static',show: false});

		$('#finalizar-button').click(function(e){
			$('#programa_proyecto_propuesta_temporal').val("false");
		});

	});


:javascript
	$(document).ready(function() {
	});

.modal.fade{id: :"finalizar-programa-modal", tabindex: "-1", role: :dialog, "aria-labelledby": :finalizarProgramaModalLabel, "aria-hidden": true}
	.modal-dialog.modal-dialog-centered{role: :document}
		.modal-content#finalizar-finalizar-remote-form
			= simple_form_for @programa_proyecto_propuesta, url: finalizar_ppf_tarea_pendiente_programa_proyecto_propuesta_path, method: :patch, remote: true, html: { autocomplete: :off } do |f|
				= f.hidden_field :finalizado
				.modal-header
					%h5.modal-title#finalizarProgramaModalLabel.m-0
						=t(:finalizar_programa)
				.modal-body
					= "¿Desea realmente finalizar este programa?"
				.modal-footer
					%button.btn.btn-sm.btn-secondary{type: :button, "data-dismiss"=>:modal}
						No
					= button_tag t(:sí), 'data-disable-with' => "<i class='fa fa-spinner fa-spin'></i> Finalizando...".html_safe, class: "btn btn-sm btn-primary"
- mantener_temporal = @mantener_temporal.present? ? @mantener_temporal : false #permite mantener el archivo temporal
- titulo t(:programa_proyecto_propuesta)
= simple_form_for @programa_proyecto_propuesta, url: guardar_seguimiento_a_terceros_ppf_tarea_pendiente_programa_proyecto_propuesta_path, method: :patch, remote: true, html: { autocomplete: :off } do |f|
	= f.input :temporal, as: :hidden, wrapper: false, input_html: { value: mantener_temporal }
	.row
		.col-12
			.card
				.card-header
					%h5.no-margin
						= t(:seguimiento_proyecto_presentado_por_terceros)
				.card-body
					.row
						.col-md-4.pr-md-0.col-12
							.row
								.col-12
									.form-group.boolean.required.programa_proyecto_propuesta_proyecto_adjudicado{class: ('has-error' if f.object.errors.messages.has_key?(:proyecto_adjudicado))}
										%label.boolean.required{:for => "programa_proyecto_propuesta_proyecto_adjudicado"}
											%abbr{:title => "required"} *
											= t(:proyecto_adjudicado)
										.radio-buttons
											= f.collection_radio_buttons :proyecto_adjudicado, [[true, t(:yes)] ,[false, t(:no)]], :first, :last
										- if f.object.errors.messages.has_key?(:proyecto_adjudicado)
											%span.help-block
												= f.object.errors.messages[:proyecto_adjudicado].first
								.col-12
									.mt-2.d-md-block.d-none
									= f.input :fecha_adjudicacion, as: :string, input_html: { class: 'auto-save basic-datetimepicker required-field', value: ((f.object.fecha_adjudicacion.blank?) ? nil : localize(f.object.fecha_adjudicacion)) }, label: t(:fecha_adjudicación), required: true
						.col-md-8.col-12
							= f.input :motivos_adjudicacion, label: t(:motivos), input_html: { class: 'textarea-in-form'}, placeholder: "Indique los motivos de la adjudicación", required: true
						.col-md-4.pr-md-0.col-12
							.row
								.col-12
									= f.input :monto_adjudicado, as: :string, label: t(:monto_adjudicado), fa_icon: :dollar, input_html: { class: 'required-field moneda' }, required: true
								.col-12
									= f.input :fecha_inicio, as: :string, input_html: { class: 'auto-save basic-datetimepicker required-field', value: ((f.object.fecha_inicio.blank?) ? nil : localize(f.object.fecha_inicio)) }, label: t(:fecha_inicio), required: true
						.col-md-8.col-12
							= f.input :enlace_proyecto, label: t(:enlace_proyecto), input_html: { class: 'required textarea-in-form' }, placeholder: "Indique en enlace del proyecto"
						.col-md-6.pr-md-0.col-12
							= f.input :participacion_agencia, label: t(:participación_agencia), input_html: { class: 'textarea-in-form' }, placeholder: "Describa la participación de la agencia"
						.col-md-6.col-12
							= f.input :instrumento_asociados_id, label: t(:instrumento_asociados_id), input_html: { class: 'textarea-in-form' }, placeholder: "Indique los instrumentos asociados"
						.col-lg-4.col-10
							= f.input :documento_resultados, as: :file, input_html: { class: 'required form-control required-field' }, label: t(:documento_resultados)
							= f.hidden_field :documento_resultados_cache
						.col-lg-1.col-2.align-self-end
							-#
								= __descargar_archivo(f.object.documento_resultados, :documento_resultados)
							= __descargar_archivo(f.object.documento_resultados, f.object)
						.col-lg-2.col-12
							= f.input :fecha_finalizacion, as: :string, input_html: { class: 'auto-save basic-datetimepicker required-field', value: ((f.object.fecha_finalizacion.blank?) ? nil : localize(f.object.fecha_finalizacion)) }, label: t(:fecha_finalización), required: true
						.col-lg-4.col-10
							= f.input :documento_proyecto, as: :file, input_html: { class: 'required form-control required-field' }, label: t(:documento_proyecto)
							= f.hidden_field :documento_proyecto_cache
						.col-lg-1.col-2.align-self-end
							-#
								= __descargar_archivo(f.object.documento_proyecto, :documento_proyecto)
							= __descargar_archivo(f.object.documento_proyecto, f.object)
	.float-right
		= link_to t(:back), root_path, class: 'btn btn-sm btn-warning'
		= button_tag t(:save), 'data-disable-with' => "<i class='fa fa-spinner fa-spin'></i> Enviando...".html_safe, id: 'guardar-revisor-button', class: "btn btn-primary btn-sm ml-1"# btn-disabled", disabled: :disabled
		= button_tag 'data-disable-with' => "<i class='fa fa-spinner fa-spin'></i> Enviando...".html_safe, id: 'finalizar-button', class: "btn btn-danger btn-sm float-right ml-1" do # related-disabled-button btn-disabled", disabled: :disabled do
			%i.fa.fa-stop
			= t(:finalizar_programa)