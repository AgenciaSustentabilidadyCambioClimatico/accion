- titulo t(:programa_proyecto_propuesta)
- @total_de_errores_por_tab = @programa_proyecto_propuesta.errores_agrupados
- @revisando	= @revisando.blank? ? false : @revisando
- @resolviendo	= @resolviendo.blank? ? false : @resolviendo
- tipo_actual = @programa_proyecto_propuesta.tipo_instrumento_id
- tipo_tab2		= TipoInstrumento::PPP_EJECUTADOS_POR_TERCEROS
- tabs				= { "tipo-de-propuesta": !@revisando && !@resolviendo, "datos-institucion": false, "objetivo-propuesta": false }
- if @revisando
	- tabs[:"revision-propuesta"]=true
- if @resolviendo
	- tabs[:"resolver-observaciones"]=true
-#//Esto mismo se hace más abajo con jQuery pero CSS es más rápido que JS para mostrar/ocultar elementos
:css
	.nav-item.control-datos-institucion { display: #{ tipo_actual == tipo_tab2 ? 'block' : 'none' }; }
	label[for="programa_proyecto_propuesta_secciones_observadas_revision"] > abbr,
	label[for="programa_proyecto_propuesta_observaciones_y_comentarios"] > abbr,
	label[for="programa_proyecto_propuesta_responsable_coordinacion_postulacion_y_seguimiento_id"] > abbr,
	label[for="programa_proyecto_propuesta_responsable_elaboracion_propuesta_y_seguimiento_id"] > abbr { display: none; }

:javascript
	var desc = #{raw json_escape(@tipo_instrumentos.inject({}){|h,ti|h[ti.id]=ti.descripcion;h}.to_json)};
	var campos = #{raw json_escape(ProgramaProyectoPropuesta.atributos_agrupados[:"datos-institucion"].to_json)};
	var seccionesGroupVal = [];
	$(document).ready(function() {
		var tipo = $('#programa_proyecto_propuesta_tipo_instrumento_id');
		$('a[data-toggle="tab"]').on('shown.bs.tab', function (e) {
			$('#programa_proyecto_propuesta_current_tab').val($(this).attr('id'));
		});

		tipo.change(function(){
			check_tab2($(this).val());
			if ( $(this).val() !== "" ) {
				$('#programa_proyecto_propuesta_descripcion').html(desc[$(this).val()]);
			};
		});
		
		$('#enviar-programa-proyecto-propuesta-button').click(function(e){
			$('#programa_proyecto_propuesta_temporal').val("false");
		});
		
		function check_tab2(tipo_ppp){
			mostrar = ( tipo_ppp == #{TipoInstrumento::PPP_EJECUTADOS_POR_TERCEROS} );
			tab = $('.nav-item.control-datos-institucion');
			
			$.each(campos,function(k,v){
				campo = $('#programa_proyecto_propuesta_'+v)
				if ( mostrar == true ) {
					if ( $('div.revision-status').attr('data-revision-status') == 'false' ){
						campo.removeAttr('disabled');
					};
				} else {
					campo.val("").attr('disabled','disabled');
				};
			});
			// Aunque esto ya es manejado por el CSS de más arriba, es sólo en el inicio.
			// Por eso lo mantenemos; por si el usuario cambia de ppp y necesitamos 
			// ocultar / mostrar dinámicamente.
			if ( mostrar == true ) {
				tab.show();
			} else {
				tab.hide();
			}
		};		

		function check_campos_relacionados(resultadoRevision, onChange) {
			seccionesGroup = $('.secciones-observadas-revision-checkbox-group');
			comentariosField = $('#programa_proyecto_propuesta_actual_observaciones_y_comentarios');
			responsable1Field = $('#programa_proyecto_propuesta_responsable_coordinacion_postulacion_y_seguimiento_id');
			responsable2Field = $('#programa_proyecto_propuesta_responsable_elaboracion_propuesta_y_seguimiento_id');

			seccionesAbbr = $('label[for="programa_proyecto_propuesta_secciones_observadas_revision"] > abbr');
			comentariosAbbr = $('label[for="programa_proyecto_propuesta_actual_observaciones_y_comentarios_revision"] > abbr');
			responsable1Abbr = $('label[for="programa_proyecto_propuesta_responsable_coordinacion_postulacion_y_seguimiento_id"] > abbr');
			responsable2Abbr = $('label[for="programa_proyecto_propuesta_responsable_elaboracion_propuesta_y_seguimiento_id"] > abbr');

			seccionesGroup.addClass('disabled-block');
			responsable1Field.attr('disabled','disabled');
			responsable2Field.attr('disabled','disabled');

			if (onChange) {
				seccionesGroup.removeClass('border-error');
				comentariosField.removeClass('border-error');
				responsable1Field.removeClass('border-error');
				responsable2Field.removeClass('border-error');
			}

			seccionesAbbr.hide();
			comentariosAbbr.hide();
			responsable1Abbr.hide();
			responsable2Abbr.hide();

			responsable1FieldVal = responsable1Field.find('option[selected="selected"]').val();
			responsable2FieldVal = responsable2Field.find('option[selected="selected"]').val();
			seccionesGroup.find('input[type="checkbox"]:checked').each(function(k,v){
				id = "#" + $(v).attr('id');
				if ( $.inArray(id,seccionesGroupVal) ) {
					seccionesGroupVal.push( id )
				}
			});

			switch(resultadoRevision) {
				case "#{ProgramaProyectoPropuesta::ACEPTADA}":
					responsable1Field.removeAttr('disabled');
					responsable2Field.removeAttr('disabled');
					responsable1Abbr.show();
					responsable2Abbr.show();
					seccionesGroup.find('input[type="checkbox"]:checked').prop('checked',false).attr('disabled','disabled');
					responsable1Field.val(responsable1FieldVal);
					responsable2Field.val(responsable2FieldVal);
					break;
				case "#{ProgramaProyectoPropuesta::RECHAZADA}":
					seccionesGroup.find('input[type="checkbox"]').prop('checked',false).attr('disabled','disabled');
					responsable1Field.val("");
					responsable2Field.val("");
					break;
				case "#{ProgramaProyectoPropuesta::CON_OBSERVACIONES}":
					seccionesGroup.removeClass('disabled-block');
					seccionesGroup.find('input[type="checkbox"]').removeAttr('disabled','disabled');
					seccionesAbbr.show();
					comentariosAbbr.show();
					responsable1Field.val("");
					responsable2Field.val("");
					$.each(seccionesGroupVal,function(index,id){
						$(id).prop('checked',true);
					});
					break;
			}
		}

		$('#programa_proyecto_propuesta_resultado_de_la_revision').change(function() {
			check_campos_relacionados($(this).val(),true)
		});

		$('body').on('change','.contribuyente-radio',function() {
			$('.seleccionar-contribuyente-button').removeAttr('disabled'); 
		});
		$('body').on('change','.usuario-radio',function() {
			$('.seleccionar-usuario-button').removeAttr('disabled'); 
		});

		check_tab2(tipo.val());
		htmlErrorToTooltip("top");
		check_campos_relacionados($('#programa_proyecto_propuesta_resultado_de_la_revision').val(),false);
		$('#programa_proyecto_propuesta_current_tab').val("#{tabs.select{|k,v| v==true }.first.first}");
		$('.label-group.border-error').tooltip('dispose');
	});
- formulario_remote = true #flag para mostrar/ocultar el botón de guardado
- mantener_temporal = @mantener_temporal.present? ? @mantener_temporal : false #permite mantener el archivo temporal, a pesar de no tener errors.-
#tab-menu-controls.mb-0.mt-3{:role => "tabpanel"}
	%ul#programa-proyecto-propuesta.nav.nav-tabs{:role => "tablist"}
		- tabs.each do |tab,active|
			%li.nav-item{class: "control-#{tab}"}
				%a.nav-link{id: "#{tab}-tab", class: (:active if active), "aria-controls" => tab, "aria-expanded" => "true", "data-toggle" => "tab", :href => "##{tab}", :role => "tab"}
					=t(tab.to_s.gsub('-','_'))
				- if !@total_de_errores_por_tab.blank? && @total_de_errores_por_tab.has_key?(tab) && @total_de_errores_por_tab[tab].size > 0
					%small.total-error
						= @total_de_errores_por_tab[tab].size
				- unless @programa_proyecto_propuesta.secciones_observadas_revision.blank?
					- if @resolviendo && @programa_proyecto_propuesta.secciones_observadas_revision.include?(tab.as_key.to_s)
						%small.total-error
							%i.fa.fa-exclamation-triangle
		- if @programa_proyecto_propuesta.errors.messages.size < 1 &&  !mantener_temporal
			- formulario_remote = false
= simple_form_for [:ppf,@tarea_pendiente,@programa_proyecto_propuesta], method: :patch, remote: formulario_remote, html: { autocomplete: :off, multipart: true, id: 'programa-proyecto-propuesta-form' }, url: @url_main_form do |f|
	=# f.hidden_field :temporal, as: :boolean, value: formulario_remote
	= f.input :temporal, as: :hidden, wrapper: false, input_html: { value: formulario_remote }, disabled: @revisando
	= f.input :current_tab, as: :hidden, wrapper: false, input_html: { value: (f.object.current_tab.blank? ? 'tipo-de-propuesta-tab' : f.object.current_tab) }
	= render "tabs", tabs: tabs, f: f
	= f.submit "", class: 'd-none'
	.float-right
		= link_to t(:back), root_path, class: 'btn btn-sm btn-warning'
		- if @revisando
			= button_tag t(:save), 'data-disable-with' => "<i class='fa fa-spinner fa-spin'></i> Enviando...".html_safe, id: 'guardar-revisor-button', class: "btn btn-primary btn-sm float-right ml-1"# btn-disabled", disabled: :disabled
		- else
			= button_tag t(:guardar_cambios_temporales), 'data-disable-with' => "<i class='fa fa-spinner fa-spin'></i> Guardando...".html_safe, class: "btn btn-sm btn-primary #{formulario_remote ? 'd-none' : nil}"
			= button_tag 'data-disable-with' => "<i class='fa fa-spinner fa-spin'></i> Enviando...".html_safe, id: 'enviar-programa-proyecto-propuesta-button', class: "btn btn-success btn-sm float-right ml-1" do # related-disabled-button btn-disabled", disabled: :disabled do
				%i.fa.fa-arrow-circle-right
				= t(:enviar_programa_proyecto_propuesta)
%div.revision-status{"data-revision-status"=>@revisando}
#buscador-contribuyente
	= render 'admin/contribuyentes/buscador', es_para_seleccion: true, resultado_mostrados: 10
= render 'admin/users/buscador'
- ue =  @programa_proyecto_propuesta.ubicacion_exacta_institucion_que_solicita_apoyo.blank? ? [] : @programa_proyecto_propuesta.ubicacion_exacta_institucion_que_solicita_apoyo.split(",")
:javascript
	initializeUbicacionInstitucionQueSolicitaApoyoMap(#{ue[0].blank? ? 'null' : ue[0]}, #{ue[1].blank? ? 'null' : ue[1]});