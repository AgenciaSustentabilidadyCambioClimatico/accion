/PRO-005
=render 'modal_resultado_revision'
- titulo 'Registro Proveedor'
= simple_form_for 'registro_proveedor', url: resultado_de_revision_path, method: :patch do |f|
  .card-header
    .d-flex.justify-content-between.align-items-center
      %h5.no-margin Postulaciones Pendientes
      %div
        %button.btn.btn-ascc.btn-sm#boton_clasificar{type: :button, "data-toggle" => "modal", "data-target" => "#modal_resultado_revision", disabled: true} Clasificar
        %button.btn.btn-ascc.btn-sm#boton_sel_todos{type: :button} Seleccionar todos
        %button.btn.btn-ascc.btn-sm#boton_desel_todos.d-none{type: :button} Deseleccionar todos
  .card-body.p-0
    %table.table.table-striped.table-bordered#adhesiones_pendientes{style: "margin-top: 0 !important;margin-bottom:0 !important;"}
      %thead
        %tr
          %th
          %th RUT postulante
          %th Nombre Postulante
          %th Tipo de Proveedor
          %th Datos Postulante
          %th Profesión
          %th Región
          %th Fecha postulación
          %th Empresa - Rut empresa
          %th Documentación ZIP
          %th Experiencias
          %th PDF
          %th Información Extra
          %th Resultado
          %th Seleccionar
      %tbody
        - @registro_proveedores.each_with_index do |registro, index|
          %tr{"data-id" => "#{registro.id}","id" => "#{registro.id}"}
            %td=index + 1
            %td=registro.rut
            %td=registro.nombre
            %td= registro.tipo_proveedor_id.present? ? TipoProveedor.find(registro.tipo_proveedor_id).nombre : 'not found'
            %td
              =registro.telefono
              =registro.email
            %td=registro.profesion
            %td=registro.region
            %td=registro.created_at.strftime("%d/%m/%Y")
            %td
              =registro.nombre_institucion.present? ? registro.nombre_institucion : registro.contribuyente&.razon_social
              =registro.rut_institucion.present? ? registro.rut_institucion : registro.contribuyente&.rut_completo
            %td.text-center
              = link_to descargar_documentos_proveedores_path(registro), class: 'btn btn-tabla' do
                %i.fa.fa-download
            %td
              %button.btn.btn-primary.btn-sm#boton_experiencia{type: :button, "data-toggle" => "modal", "data-target" => "#modal_experiencia-#{registro.id}"} Ver
            %td.text-center
              = link_to descargar_pdf_proveedores_path(registro), method: :post, class: 'btn btn-tabla' do
                %i.fa.fa-file-pdf-o
            %td
              / = registro.comentario ? registro.comentario : '-'
              = registro.respuesta_comentario ? "Respuesta comentario: #{registro.respuesta_comentario}" : ''
              = registro.archivo_respuesta_rechazo ? __descargar_archivo(registro.archivo_respuesta_rechazo,registro.archivo_respuesta_rechazo) : ''
            %td
              %label.estado-elem= registro.rechazo_directiva > 0 ? 'Apeló' : 'Pendiente'
              = f.input :estado, as: :hidden, input_html: { name: "estado[#{registro.id}]", class: "elemento-estado"}, wrapper: false
              = f.input :comentario, as: :hidden, input_html: { name: "comentario[#{registro.id}]", class: "elemento-estado"}, wrapper: false
            %td.text-center
              %input.form-control.seleccionar-elemento-adhesion.mt-2{type: :checkbox, value: registro.id}
            =render "modal_experiencia", registro: registro

    .float-right
      = volver_root
      = button_tag t(:save), 'data-disable-with' => "<i class='fa fa-spinner fa-spin'></i> Guardando...".html_safe, id: 'enviar_button', class: "btn btn-sm btn-primary", disabled: true

#aceptadas.mt-5
  =render "aceptados_rechazados"

:javascript

  function cambio_estado_check(){
    check_length = $('.seleccionar-elemento-adhesion:checked').length
    total_length = $('.seleccionar-elemento-adhesion').length
    $('#boton_clasificar').prop('disabled', (check_length == 0));
    if(check_length > 1 || check_length == total_length){
      $('#boton_sel_todos').addClass("d-none");
      $('#boton_desel_todos').removeClass("d-none");
    }else{
      $('#boton_sel_todos').removeClass("d-none");
      $('#boton_desel_todos').addClass("d-none");
    }
  }


  function activar_guardar_modal_clasificar(){
    $('#enviar_modal_resultado_revision').prop('disabled', true);
    console.log(`${$('#adhesion_estado_elementos').val()}`);
    $('#aprobado_fields').css("display", "none");
    $('#comentario_div').css("display", "none");
    if($('#adhesion_estado_elementos').val() != ""){
      if($('#adhesion_estado_elementos').val() == "1"){
        $('#aprobado_fields').toggle();
        $('#comentario_div').css("display", "none");
        $('#enviar_modal_resultado_revision').prop('disabled', false);
      } else if($('#adhesion_estado_elementos').val() == "2") {
        $('#comentario_div').toggle();
        $('#enviar_modal_resultado_revision').prop('disabled', false);
      } else{
        if($('#adhesion_justificacion_elementos').val() != ""){
          $('#enviar_modal_resultado_revision').prop('disabled', false);
        }
      }
    }
  }

  $(document).ready(function(){
    $('.seleccionar-elemento-adhesion').click(function(){
      cambio_estado_check();
    });

    $('#boton_sel_todos').click(function(){
      $('.seleccionar-elemento-adhesion').prop("checked", true);
      cambio_estado_check();
    });

    $('#boton_desel_todos').click(function(){
      $('.seleccionar-elemento-adhesion').prop("checked", false);
      cambio_estado_check();
    });

    $('#adhesion_estado_elementos').change(function(){
      activar_guardar_modal_clasificar();
    });

    $('#adhesion_justificacion_elementos').on('input paste', function(){
      activar_guardar_modal_clasificar();
    });

    $('#adhesiones_pendientes').DataTable({
      dom: 't',
      paging: false,
      responsive: {
        details: {
          type: 'column',
          target: 'tr'
        }
      },
      language: {
        url: "#{asset_path('spanish.json')}"
      },
      columnDefs: [
        { responsivePriority: 1, targets: 3 },
        { responsivePriority: 2, targets: -1, orderable: false },
        { responsivePriority: 3, targets: -2 }
      ]
    });

    $('#adhesiones_revisadas').DataTable({
      dom: 't',
      paging: false,
      responsive: {
        details: {
          type: 'column',
          target: 'tr'
        }
      },
      language: {
        url: "#{asset_path('spanish.json')}"
      },
      columnDefs: [
        { responsivePriority: 1, targets: 3 },
        { responsivePriority: 2, targets: -1, orderable: false },
        { responsivePriority: 3, targets: -2 }
      ]
    });

    $('#enviar_modal_resultado_revision').click(function(){
      estado = $('#adhesion_estado_elementos option:selected');
      estado_val = estado.prop("value");
      estado_nombre = estado.text();
      comentario = $('#adhesion_justificacion_elementos').val();

      $('.seleccionar-elemento-adhesion:checked').each(function(index, elem){
        posicion = elem.value;
        tr = $('#adhesiones_pendientes tr[data-id="'+posicion+'"]');
        console.log(tr);
        tr.find(".estado-elem").html(estado_nombre);
        console.log(`${tr.find("input[name='aceptado["+posicion+"]']")}`)
        tr.find("input[name='estado["+posicion+"]']").val(estado_val)
        tr.find("input[name='aceptado["+posicion+"]']").val(estado_val);
        tr.find("input[name='comentario["+posicion+"]']").val(comentario);
      });

      $('.seleccionar-elemento-adhesion').attr("checked", false);
      $('#boton_clasificar').prop('disabled', true);
      $('#modal_resultado_revision').modal("hide");
      $('#adhesion_estado_elementos').val("");
      $('#adhesion_justificacion_elementos').val("");
      $('#enviar_modal_resultado_revision').prop("disabled", true);
      $('#enviar_button').prop("disabled", false);
    });
  });
